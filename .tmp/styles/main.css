/* VENDOR - LESS */
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
@font-face {
  font-family: "iconsWA";
  src: url('/styles/fonts/src/iconsWA.eot');
  src: url('/styles/fonts/src/iconsWA.eot?#iefix') format('eot'), url('/styles/fonts/src/iconsWA.woff') format('woff'), url('/styles/fonts/src/iconsWA.ttf') format('truetype'), url('/styles/fonts/src/iconsWA.svg#iconsWA') format('svg');
  font-weight: normal;
  font-style: normal;
}
.iconWA {
  font-size: 1rem;
}
.iconWA:before {
  display: inline-block;
  font-family: "iconsWA";
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.iconWA-lg {
  font-size: 1.3333333333333333rem;
  line-height: 0.75rem;
  vertical-align: -15%;
}
.iconWA-2x {
  font-size: 2rem;
}
.iconWA-3x {
  font-size: 3rem;
}
.iconWA-4x {
  font-size: 4rem;
}
.iconWA-5x {
  font-size: 5rem;
}
.iconWA-fw {
  width: 1.2857142857142858rem;
  text-align: center;
}
.iconWA_search:before {
  content: "\EA01";
}
/* URL */
/* FONT FAMILY */
/* CODE COLOR */
/* LAYOUT - LESS */
/*
* [TEMPLATING] - DESKTOP LESS - LAYOUT
*/
*,
*:before,
*:after {
  box-sizing: border-box;
}
/* THIS IS THE EQUIVALENT OF PROPERTIES CSS -> "outline: o;" FOR BROWSER DESKTOP
*  BUT FOR BROWSER MOBILE & TABLET WITH THE PROPERTIES CSS -> "-webkit-tap-highlight-colorrgba: (0,0,0,0);"
*/
* {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
html {
  font-size: 62.5%;
  font-family: 'Franklin ITC W01 Light', sans-serif;
}
body {
  -webkit-font-smoothing: antialiased;
  background: #ffffff;
  font-size: 1.4rem;
  margin: 0 auto;
  max-width: 980px;
}
img {
  max-width: 100%;
  height: auto;
}
a,
a:hover,
a:active,
a:focus {
  outline: 0;
}
a {
  text-decoration: none;
}
/*.page{
  width: 650px;
  float: left;
  border: 1px solid #000;
  height: 500px;
}

#aside{
  float: right;
  width: 312px;
  border: 1px solid #000;
  height: 500px;
}*/
/* COMPONENTS */
.clearfix {
  clear: both;
}
#weatherAlertContainer input[type=number] {
  -moz-appearance: textfield;
  -webkit-border-radius: 0px;
}
#weatherAlertContainer ::-webkit-inner-spin-button {
  -webkit-appearance: none;
}
#weatherAlertContainer ::-webkit-outer-spin-button {
  -webkit-appearance: none;
}
#weatherAlertContainer .formContainer {
  background-color: #efebea;
  float: left;
  width: 100%;
  padding: 20px 15px;
}
#weatherAlertContainer .error {
  background-color: #e30000;
  color: #ffffff;
  margin: 0;
  font-size: 1.2rem;
}
#weatherAlertContainer .error.errorServices {
  padding: 8px 15px;
}
#weatherAlertContainer .error.error-down {
  padding: 11px;
}
#weatherAlertContainer .titleWeather {
  margin: 0 0 15px 0;
  font-family: 'HelveticaNeueCondensed', sans-serif;
  font-size: 2rem;
}
#weatherAlertContainer input[name='location'],
#weatherAlertContainer .searchAlert {
  outline: 0;
  font-family: Arial, Helvetica, sans-serif;
  vertical-align: middle;
  width: 100%;
}
#weatherAlertContainer .weatherAlertForm .formLeft {
  width: 60%;
  float: left;
}
#weatherAlertContainer .weatherAlertForm .formRight {
  float: right;
  width: 38%;
  margin-left: 1%;
}
#weatherAlertContainer input[name='location'] {
  padding: 11px 9px 9px 11px;
  border: 1px solid #cccccc;
  box-shadow: 2px 2px 0px #a6a6a6 inset;
  font-size: 1.3rem;
  color: #999999;
}
#weatherAlertContainer input[name='location'].errorInput {
  border: 1px solid #e30000;
  box-shadow: 1px 1px 4px #e30000 inset;
  color: #e30000;
}
#weatherAlertContainer .searchAlert {
  background-color: #999999;
  border-radius: 4px;
  font-weight: bold;
  font-size: 1.5rem;
  color: #fff;
  cursor: pointer;
  padding: 9px 19px;
  border: 0 outset ;
  border-bottom: 2px solid #7a7878;
  text-shadow: 0px 1px 0px #000000;
}
#weatherAlertContainer .searchAlert:before {
  display: none;
}
#weatherAlertContainer .searchAlert:after {
  content: "Chercher";
}
#weatherAlertContainer .searchAlert.errorButton {
  background-color: #e30000;
  border-bottom: 2px solid #a30000;
}
/* MEDIA QUERY */
@media only screen and (max-width: 667px), only screen and (min-width: 668px) and (max-width: 1023px) {
  .weatherAlertContainer .weatherAlertForm .formLeft {
    width: 80%;
  }
  .weatherAlertContainer .weatherAlertForm .formRight {
    width: 18%;
  }
  .weatherAlertContainer .searchAlert {
    font-size: 1.7rem;
    border-radius: 0;
    border-bottom: 0;
    padding: 10px 19px;
  }
  .weatherAlertContainer .searchAlert:before {
    display: block;
  }
  .weatherAlertContainer .searchAlert:after {
    display: none;
  }
  .weatherAlertContainer .searchAlert.errorButton {
    border-bottom: 0;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
